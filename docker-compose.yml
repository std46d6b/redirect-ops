services:
  redis:
    image: redis:latest
    container_name: redis_container
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - ./redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on >$REDIS_PASSWORD ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '$REDIS_PASSWORD', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - redirect-net

  redirect-ts:
    build:
      context: ./redirect-ts
      dockerfile: Dockerfile
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    environment:
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-3000}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
      - REDIS_HOST=redis_container
      - REDIS_PORT=6379
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - redirect-net

  tg-admin:
    build:
      context: ./tg-admin
      dockerfile: Dockerfile
    environment:
      - TOKEN=${TOKEN}
      - ADMIN=${ADMIN}
      - LOG_LEVEL=${LOG_LEVEL}
      - URL_PREFIX=${URL_PREFIX}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
      - REDIS_HOST=redis_container
      - REDIS_PORT=6379
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - redirect-net

networks:
  redirect-net:
    driver: bridge
